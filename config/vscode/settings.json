{
    "vim.handleKeys": {
        "<C-p>": false,
        "<C-w>": false
    },
    "vim.normalModeKeyBindings": [
        {
            "before": ["<leader>", "z"],
            "commands": ["workbench.action.toggleZenMode"]
        },
        {
            "before": ["x"],
            "commands": ["workbench.action.closeActiveEditor"],
            "when": "editorTextFocus"
        },
        {
            "before": ["J"],
            "commands": ["workbench.action.previousEditor"],
            "when": "editorTextFocus"
        },
        {
            "before": ["K"],
            "commands": ["workbench.action.nextEditor"],
            "when": "editorTextFocus"
        },
        // Code
        {
            "before": ["<leader>", "c", "f"],
            "commands": ["editor.fold"],
            "when": "editorTextFocus"
        },
        {
            "before": ["<leader>", "c", "u"],
            "commands": ["editor.unfold"],
            "when": "editorTextFocus"
        },
        // Files
        {
            "before": ["<leader>", "f", "f"],
            "commands": ["workbench.action.files.openFolder"]
        },
        {
            "before": ["<leader>", "f", "o"],
            "commands": ["workbench.action.files.openFile"]
        },
        // Github Copilot
        {
            "before": ["<leader>", "q", "o"],
            "commands": ["workbench.action.quickchat.toggle"]
        },
        // Group
        {
            "before": ["<leader>", "g", "w"],
            "commands": ["workbench.action.closeEditorsInGroup"]
        },
        {
            "before": ["<leader>", "g", "<Left>"],
            "commands": ["workbench.action.moveEditorToPreviousGroup"]
        },
        {
            "before": ["<leader>", "g", "<Right>"],
            "commands": ["workbench.action.moveEditorToNextGroup"]
        },
        // Remote
        {
            "before": ["<leader>", "r", "c", "o"],
            "commands": ["remote-containers.rebuildNoCacheAndReopenInContainer"]
        },
        {
            "before": ["<leader>", "r", "o"],
            "commands": ["remote-containers.rebuildAndReopenInContainer"]
        },
        {
            "before": ["<leader>", "r", "r"],
            "commands": ["remote-containers.reopenInContainer"]
        },
        // Sidebar
        {
            "before": ["<leader>", "s", "e"],
            "commands": ["workbench.view.explorer"]
        },
        {
            "before": ["<leader>", "s", "f"],
            "commands": ["workbench.view.search"]
        },
        {
            "before": ["<leader>", "s", "g"],
            "commands": ["workbench.panel.chat.view.copilot.focus"]
        },
        {
            "before": ["<leader>", "s", "s"],
            "commands": ["workbench.view.scm"]
        },
        {
            "before": ["<leader>", "s", "t"],
            "commands": ["workbench.action.toggleSidebarVisibility"]
        },
        {
            "before": ["<leader>", "s", "x"],
            "commands": ["workbench.view.extensions"]
        },
        {
            "before": ["f"],
            "after": ["<leader>", "<leader>", "f"]
        },
        {
            "before": ["F"],
            "after": ["<leader>", "<leader>", "F"]
        }
    ],
    "vim.visualModeKeyBindings": [
        {
            "before": ["f"],
            "after": ["<leader>", "<leader>", "f"]
        },
        {
            "before": ["F"],
            "after": ["<leader>", "<leader>", "F"]
        }
    ],
    "vim.insertModeKeyBindings": [
        {
            "before": ["j", "j"],
            "after": ["<Esc>"]
        }
    ],
    "vim.commandLineModeKeyBindings": [],
    "vim.commandLineModeKeyBindingsNonRecursive": [],
    "editor.cursorSurroundingLines": "5",
    "vim.statusBarColors.easymotionmode": "",
    "vim.easymotion": true,
    "vim.easymotionKeys": "asdfghjklqwertyuiop",
    "vim.useSystemClipboard": true,
    "vim.camelCaseMotion.enable": true
    "workbench.editor.enablePreview": false,
    "workbench.iconTheme": "vscode-icons",

	"search.exclude": {
		"**/node_modules": false,
		"**/compiled_frontend": true,
	},
	
	"editor.bracketPairColorization.enabled": true,
    "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
	"editor.guides.bracketPairs": true,
	"editor.guides.bracketPairsHorizontal": true,
	
    "editor.defaultFormatter": "esbenp.prettier-vscode",
	"editor.formatOnPaste": true,
    "editor.formatOnSave": true,    
    "editor.fontFamily": "Fira Code Light, Menlo, Monaco, 'Courier New', monospace",
	"editor.fontLigatures": true,
	"editor.lineNumbers": "relative",
    "editor.wordWrap": "on",
    "editor.maxTokenizationLineLength": 2000000,	
    "editor.inlineSuggest.enabled": true,
	
    "git.confirmSync": false,
    "diffEditor.ignoreTrimWhitespace": false,

	"prettier.requireConfig": true,
	"prettier.useTabs": true,
    "prettier.withNodeModules": true,

	
	"explorer.autoRevealExclude": {
		"**/node_modules": false
	},
    "zenMode.hideLineNumbers": false,
	"zenMode.hideStatusBar": false,
	
	"github.copilot.enable": {
		"vue": true,
		"javascript": true,
		"typescript": true,
		"css": true,
		"scss": true,
	},
	"github.copilot.advanced": {
        "*": true,
        "typescript": true,
		"javascript": true,
		"vue": true,
		"css": true,
		"scss": true
	
	},
	"settingsSync.ignoredExtensions": [],
	"editor.stickyScroll.maxLineCount": 1,
	"editor.stickyScroll.scrollWithEditor": false,
	"vim.leader": " ",
	"github.copilot.editor.enableAutoCompletions": true,
	"editor.accessibilitySupport": "off",
	"window.zoomLevel": 0.75,
	"terminal.integrated.profiles.linux": {
		"bash": {
			"path": "bash",
			"icon": "terminal-bash"
		},
		"zsh": {
			"path": "zsh"
		},
		"fish": {
			"path": "fish"
		},
		"tmux": {
			"path": "tmux",
			"icon": "terminal-tmux"
		},
		"pwsh": {
			"path": "pwsh",
			"icon": "terminal-powershell"
		},
		"ash": {
			"path": "/bin/ash"
		}
	},
	"terminal.integrated.defaultProfile.linux": "ash",
}
